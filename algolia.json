
[
  
  
  {
    "objectID": "1735729833",
    "permalink": "/post/how-to-write-a--article/",
    "title": "怎么在hugo写一篇文章",
    
    "content": " 摘要 添加一篇文章 本地开启草稿箱视图 解除文章草稿状态 发布草稿文章 设置文章过期时间/发布时间 发布保留过期文章及未发布文章 添加一篇文章 添加文章使用的是 new 子命令，这里我们在 post目录下创建一篇名为 my-first-post\nhugo new posts/my-first-post.md 创建完成后打开文章可以看到如下内容：\n+++ title: ‘My First Post’ date: \u0026#39;2025-01-01T19:10:33+08:00\u0026#39; draft: true +++ 这是一篇 Markdown 格式的文章，文章的开头由前后 +++ 包裹了一些信息，这些信息称为文章的元数据，用于说明文章的相关配套信息，其中包括但不限于标题、日期、标签、是否草稿等。\n这里对上述的元数据做解释如下：\ntitle: 文章的标题 date: 文章的日期 draft: 文章是否草稿，草稿内容不会被发布 tags: 为当前文章打标签，不同文章可以使用相同的标签 文章内容需要写在元数据的后面：\n+++\n+++ title: ‘My First Post’ date: \u0026#39;2025-01-01T19:10:33+08:00\u0026#39; draft: true +++ hello，word！ +++\n完成文章的编写后我们启动hugo来到浏览器，发现并没有看到新加的文章，即使刷新几百次也是一样的效果，这是因为文章仍处于草稿箱状态。\n如果我们想在本地查看草稿内容，只需要在启动 Hugo 的时候带上参数 -D或则 --buildDrafts ：\nhugo server -D 解除文章草稿状态 在正式发布文章前我们需要解除当前文章的草稿状态，解除草稿状态只需要把文章开头的 draft 选项去除即可。\n发布草稿文章 如果需要将草稿内容进行发布，在执行 hugo 生成发布内容时附带 -D 或则 --buildDrafts 即可。\nhugo -D 设置文章过期时间/发布时间 Hugo 通过以下两个元数据选项提供文章的过期时间及发布时间（已发布的可以通过 URL 间接访问😂）：\nexpiryDate：过期时间，已过期的内容不会渲染到网页中 publishDate：发布时间，未到发布时间不会渲染到网页中 --- title: \u0026#34;你好\u0026#34; date: 2024-12-26T01:04:52+08:00 expiryDate: 2024-12-26T01:05:52+08:00 description: \u0026#34;我不好\u0026#34; --- 发布保留过期文章及未发布文章 直接执行 hugo 生成的发布内容不会携带已过期的文章或者未到发布时间的文章.\n需要发布时携带过期文章需要执行时附带参数 -E 或则 --buildExpired：\nhugo -E 需要发布时携带未发布文章需要执行时附带参数 -F 或则 --buildFuture：\nhugo -F 当然也可以选择同时附带两个以上的参数：\nhugo -DEF 生成发布文件完成后push最新内容到 GitHub 上即可看到最新的文章。\n",
    
    "date": "2025-01-01 19:10:33",
    "updated": "2025-01-01 19:40:55"
  }
  
  , 
  {
    "objectID": "1735146292",
    "permalink": "/post/hello/",
    "title": "博客的第一篇文章",
    
    "content": "大家好，我是Тенеход\n这是我新创建的博客，希望大家可以在这个评论区下多多留言\n后续，我会出一个搭建这个博客还有应用这个主题的教程。\n尽请期待吧 :ஐ٩(๑´ᵕ`)۶ஐ:\nps:后续也会有许多各种各样的教程\n",
    
    "date": "2024-12-26 01:04:52",
    "updated": "2024-12-26 01:05:20"
  }
  
]